<?php

namespace shopBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Cart
 *
 * @ORM\Table(name="cart")
 * @ORM\Entity(repositoryClass="shopBundle\Repository\CartRepository")
 */
class Cart
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;


    /**
     * @var float
     *
     * @ORM\Column(name="total", type="float")
     */
    private $total;

    /**
     * @var string
     *
     * @ORM\Column(name="count", type="string", length=255)
     */
    private $count;

    /**
     * @var array
     *
     * @ORM\ManyToMany(targetEntity="shopBundle\Entity\Produit")
     * @ORM\JoinTable(
     *     name="items",
     *     joinColumns={@ORM\JoinColumn(name="Cart", referencedColumnName="id")},
     *     inverseJoinColumns={@ORM\JoinColumn(name="produit", referencedColumnName="id")}
     * )
     */
    private $items;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set total
     *
     * @param float $total
     *
     * @return Cart
     */
    public function setTotal($total)
    {
        $this->total = $total;

        return $this;
    }

    /**
     * Get total
     *
     * @return float
     */
    public function getTotal()
    {
        return $this->total;
    }

    /**
     * Set count
     *
     * @param string $count
     *
     * @return Cart
     */
    public function setCount($count)
    {
        $this->count = $count;

        return $this;
    }

    /**
     * Get count
     *
     * @return string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * Set items
     *
     * @param array $items
     *
     * @return Cart
     */
    public function setItems($items)
    {
        $this->items = $items;

        return $this;
    }

    /**
     * Get items
     *
     * @return array
     */
    public function getItems()
    {
        return $this->items;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->items = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add item
     *
     * @param \shopBundle\Entity\Produit $item
     *
     * @return Cart
     */
    public function addItem(\shopBundle\Entity\Produit $item)
    {
        $this->items[] = $item;

        return $this;
    }

    /**
     * Remove item
     *
     * @param \shopBundle\Entity\Produit $item
     */
    public function removeItem(\shopBundle\Entity\Produit $item)
    {
        $this->items->removeElement($item);
    }

    /**
     * Set user
     *
     * @param \shopBundle\Entity\User $user
     *
     * @return Cart
     */
    public function setUser(\shopBundle\Entity\User $user = null)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \shopBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }
}
